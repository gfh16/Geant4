#include "TMath.h"
using namespace TMath;

void View_Dis()
{
  gStyle->SetOptStat(1);
  gStyle->SetOptFit(1111);
  
  TH1D* h1_ESpec_Det = new TH1D("h1_ESpec_Det","h1_ESpec_Det",400,0,5);
  
  TChain* t1_data = new TChain("t1");
  for(int i=0;i<1;i++)
  {
    char FileName_tem[200];
    sprintf(FileName_tem,"Data/K40_1E5_%d.root",i);
    t1_data->Add(FileName_tem);
  }
    
  double Src_PosX = 0; double Src_PosY = 0; double Src_PosZ = 0;
  double Energy_Origin = 0; double Energy_Detect = 0;
  int EvtID = 0;
  t1_data->SetBranchAddress("Src_PosX",&Src_PosX);
  t1_data->SetBranchAddress("Src_PosY",&Src_PosY);
  t1_data->SetBranchAddress("Src_PosZ",&Src_PosZ);
  t1_data->SetBranchAddress("Energy_Origin",&Energy_Origin);
  t1_data->SetBranchAddress("Energy_Detect",&Energy_Detect);
  t1_data->SetBranchAddress("EvtID",&EvtID);
  
  int EvtNum = t1_data->GetEntries();
  cout<<"Evt Num: "<<EvtNum<<endl;
  
  for(int i=0;i<EvtNum;i++)
  {
    if(i%10000==0) { cout<<"Evt:"<<i<<endl; }
    t1_data->GetEvent(i);
    h1_ESpec_Det->Fill(Energy_Detect);
  }
  
  TCanvas* c1_ESpec = new TCanvas("c1_ESpec","c1_ESpec",1);
  c1_ESpec->cd();
  h1_ESpec_Det->Draw();
}
